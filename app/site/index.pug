mixin anchored(tag, text)
  - var escapedText = text.toLowerCase().replace(/[^\w]+/g, "-")
  | <#{tag} class="headline-with-anchor">
  a.without-underline(name=escapedText href=("#" + escapedText))=text
  | </#{tag}>

mixin codeExample(runnable)
  .code-example(class={"has-run-button": runnable})
    if runnable
      button.inset-icon(data-run="inline") Run inline
      button.inset-icon(data-run="modal") Run as modal
    block

doctype html
html.no-js(lang="en" xmlns:og="http://ogp.me/ns#" xmlns:fb="http://www.facebook.com/2008/fbml")
  head
    title= htmlWebpackPlugin.options.title
    script.
      document.documentElement.classList.remove("no-js");

    link(rel="shortcut icon" href="data:image/x-icon;," type="image/x-icon")

    meta(charset="utf-8")
    meta(name="viewport" content="width=device-width, initial-scale=1, user-scalable=no")
    meta(property="og:title" content=htmlWebpackPlugin.options.title)
    meta(property="og:type" content="website")
    meta(property="og:url" content="http://embedbox.io")
    meta(property="og:description" content=htmlWebpackPlugin.options.description)
    mete(name="description" content=htmlWebpackPlugin.options.description)

  body
    main(data-column)
      .slide.padded.hero
        .content(data-column)
          h1.logo-text EmbedBox

          p= htmlWebpackPlugin.options.description

          ul.nav
            li
              a.more(href="#documentation") Documentation

            li
              a.more(href="https://github.com/EagerIO/EmbedBox") GitHub

        .figure.frame-container(data-column)
          .placeholder
            .loading-dots
              i
              i
              i

          iframe#automated-frame

          .barrier

      noscript.slide.no-js-info
        p This website requires JavaScript to retrieve content.
        p: a(href="http://enable-javascript.com", target="_blank") How to enable JavaScript.

      .slide.padded.features
        ul.features-list
          li.roomy-feature
            .content
              h3 Clean customizable UI
              p
                | EmbedBox tries to remain as neutral as possible,
                | allowing it to blend into any existing site by just picking a few colors.
                | Need full CSS control? No problem, just include a stylesheet when instantiating.

            .image
              img(src=require("./assets/customize-feature.png") width="732")

          li.roomy-feature
            .content
              h3 Built-in documentation.
              p EmbedBox includes install instructions for every major CMS platform.

            .image
              img(src=require("./assets/documentation-feature.png") width="512")

          li.roomy-feature
            .content
              h3 Got plugins?
              p
                | EmbedBox painlessly showcases your existing CMS plugins,
                | all inside an interface which is easy to integrate into your site.

            .image
              img(src=require("./assets/got-plugins-feature.png") width="512")

      .slide.padded.docs.full.install

        .docs-nav
          +anchored("h1", "Documentation")

          ul.table-of-contents

        .docs-content
          +anchored("h2", "How to use")

          :marked
            Download the <a href="#">latest release</a> and add this to your page:

          +codeExample
            != require("./examples/install.md")

          +codeExample(true)
            != require("./examples/basic.md")

          //- This gets moved by JS
          #run-inline-container.figure.embedbox-figure.frame-container

          :marked
            A `downloadURL` can be used instead of `embedCode`.
            Targets can have specific downloads as well!

            If your script should be loaded in the `<head>` tag,
            set `insertInHead` and the instructions will update according.

          +codeExample(true)
            != require("./examples/download-url.md")

          +anchored("h3", "Positioning")
          :marked
            EmbedBox can appear inline by specifying `container` in the config.
            This can be a CSS selector.

          +codeExample
            != require("./examples/container-selector.md")

          :marked
            ...or an HTML element.

          +codeExample
            != require("./examples/container-element.md")

          +anchored("h3", "Behavior")
          :marked
            EmbedBox will automatically appear on creation.
            This can be disabled with the `autoShow` option.

          +codeExample(true)
            != require("./examples/auto-show.md")

          :marked
            The target search screen can be skipped with `initialTarget`.

          +codeExample(true)
            != require("./examples/initial-target.md")

          :marked
            Set <a href="#ordering">`visibleTargets`</a>
            to disable the target search entirely.

          +anchored("h3", "Routing")
          :marked
            EmbedBox will look at `#!/embed/:targetID` when created and route accordingly.

          +codeExample(true)
            != require("./examples/routing.md")

          :marked
            This can be disbled with the `routing` option.

          +codeExample(true)
            != require("./examples/disabled-routing.md")

          +anchored("h2", "Customization")

          +anchored("h3", "Themes")
          +codeExample(true)
            != require("./examples/custom-theme.md")

          :marked
            If the `theme` configuration option is too coarse,
            the EmbedBox stylesheet can be extended.

          +codeExample(true)
            != require("./examples/custom-stylesheet.md")

          +anchored("h3", "Content slots")
          :marked
            Content can be inserted before and after the target instructions.

            Target specific slots can be included as well.

          +codeExample(true)
            != require("./examples/content-slots.md")

          +anchored("h3", "Labels")
          :marked
            Labels can be added as strings or functions.
            The EmbedBox `config` is exposed to label functions.

          +codeExample(true)
            != require("./examples/labels.md")

          +anchored("h3", "Ordering")
          :marked
            Targets can be limited to a specific set and order with an array of target IDs.
            Consult `EmbedBox.getTargetIDs()` for a list of IDs.

          +codeExample(true)
            != require("./examples/visible-targets.md")

          :marked
            If `visibleTargets` only has one entry, the target search will be skipped.

          +codeExample(true)
            != require("./examples/single-target.md")

          +anchored("h3", "Custom targets")
          :marked
            If the content slots are too coarse, custom targets can be created with the custom build.

          +codeExample
            != require("./examples/custom-install.md")

          +codeExample(true)
            != require("./examples/custom-target.md")

          +anchored("h2", "Contributing")
          :marked
            Please do, we would love for this to become a project of the community.
            Feel free to open an issue, submit a PR or contribute to the docs.

            Is there a CMS target that you'd like to see here?

            [Check out](https://github.com/EagerIO/EmbedBox/blob/master/docs/new-targets.md) how easy it is to add one!

      .slide.made-by
        .label Made by

        a.logo-link.without-underline(href="https://eager.io")
          != require("./assets/eager-logo.svg")
