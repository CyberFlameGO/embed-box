mixin anchored(tag, text)
  - var escapedText = text.toLowerCase().replace(/[^\w]+/g, "-")
  | <#{tag} class="headline-with-anchor">
  a.without-underline(name=escapedText href=("#" + escapedText))=text
  | </#{tag}>

mixin codeExample(runnable, id)
  .code-example(class={"has-run-button": runnable} data-example-id=id)
    if runnable
      button(data-run="inline") Run inline
      button(data-run="modal") Run as modal
    block

+anchored("h2", "How to use")

:marked
  Download the <a href="#">latest release</a> and add this to your page:

+codeExample!= require("./examples/install.md")

+codeExample(true)!= require("./examples/basic.md")

:marked
  If your script should be loaded in the `<head>` tag,
  set `insertInHead: true` and the instructions will update according.

+anchored("h3", "Targets")
:marked
  A target will use the "global" configuration unless a more specific "local" option is set.

  In this example all targets except Weebly will use the same `embedCode`

+codeExample(true)!= require("./examples/advanced.md")

:marked
  Use `EmbedBox.getTargetIDs()` to programatically get the bundled target IDs.

+codeExample(false, "target-ids")!= require("./examples/get-target-ids.md")

+anchored("h3", "Downloads")
:marked
  A `downloadURL` can be used for sending users CMS plugins or libraries.
  If you'd like to use `downloadURL` with the `generic` target, include a local `embedCode` to guide the user.

  Specifying a `downloadURL` will start an automatic download when a target is selected.
  Set `autoDownload: false` to disable to this behavior.

+codeExample(true)!= require("./examples/download-url.md")

+anchored("h3", "Positioning")
:marked
  EmbedBox can appear inline by specifying `container` in the config.
  This can be a CSS selector.

+codeExample!= require("./examples/container-selector.md")

:marked
  ...or an HTML element.

+codeExample!= require("./examples/container-element.md")

+anchored("h3", "Behavior")
:marked
  EmbedBox will automatically appear on creation.
  This can be disabled with the `autoShow` option.

+codeExample()!= require("./examples/auto-show.md")

:marked
  The target search screen can be skipped with `initialTarget`.

+codeExample(true)!= require("./examples/initial-target.md")

:marked
  Set <a href="#ordering" class="without-underline">`visibleTargets`</a>
  to disable the target search entirely.

+anchored("h3", "Routing")
:marked
  EmbedBox will look at `#!/embed/:targetID` when created and route accordingly.

+codeExample(true)!= require("./examples/routing.md")

:marked
  This can be disbled with the `routing` option.

+codeExample(true)!= require("./examples/disabled-routing.md")

+anchored("h2", "Customization")
+anchored("h3", "Themes")
+codeExample(true)!= require("./examples/custom-theme.md")

:marked
  If the `theme` configuration option is too coarse,
  the EmbedBox stylesheet can be extended.

+codeExample(true)!= require("./examples/custom-stylesheet.md")

+anchored("h3", "Content slots")
:marked
  Content can be inserted before and after the target instructions.

  Target specific slots can be included as well.

+codeExample(true)!= require("./examples/content-slots.md")

+anchored("h3", "Labels")
:marked
  Labels can be added as strings or functions.
  The EmbedBox `config` is exposed to label functions.

+codeExample(true)!= require("./examples/labels.md")

+anchored("h3", "Ordering")
:marked
  Targets can be sorted with the `order` option.
  A target will remain in the original order if not specified.
  Set `order: -1` to disable a target entirely.

+codeExample(true)!= require("./examples/ordering.md")

:marked
  The target search will be skipped if only one target is visible.

+codeExample(true)!= require("./examples/single-target.md")

+anchored("h3", "Custom targets")
:marked
  If the content slots are too coarse, custom targets can be created with the custom build.

+codeExample!= require("./examples/custom-install.md")

+codeExample(true)!= require("./examples/custom-target.md")

+anchored("h2", "Contributing")
:marked
  Please do, we would love for this to become a project of the community.
  Feel free to open an issue, submit a PR or contribute to the docs.

  Is there a CMS target that you'd like to see here?

  [Check out](https://github.com/EagerIO/EmbedBox/blob/master/docs/new-targets.md) how easy it is to add one!

